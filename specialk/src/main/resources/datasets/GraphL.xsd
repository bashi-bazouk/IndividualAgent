<?xml version="1.0" encoding="UTF-8"?>
<!-- DOCTYPE GraphL [ -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:complexType name="Integer">
    <xs:sequence>
      <xs:element ref="Integer"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Integer">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.Integer"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.Integer">
    <xs:attribute name="value" use="required"/>
  </xs:attributeGroup>
  <xs:element name="Double">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.Double"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.Double">
    <xs:attribute name="value" use="required"/>
  </xs:attributeGroup>
  <xs:complexType name="String">
    <xs:sequence>
      <xs:element ref="String"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="String">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.String"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.String">
    <xs:attribute name="value" use="required"/>
  </xs:attributeGroup>
  <xs:complexType name="UIdent">
    <xs:sequence>
      <xs:element ref="UIdent"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="UIdent">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.UIdent"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.UIdent">
    <xs:attribute name="value" use="required"/>
  </xs:attributeGroup>
  <xs:element name="LIdent">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.LIdent"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.LIdent">
    <xs:attribute name="value" use="required"/>
  </xs:attributeGroup>
  <xs:complexType name="Wild">
    <xs:sequence>
      <xs:element ref="Wild"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Wild">
    <xs:complexType>
      <xs:attributeGroup ref="attlist.Wild"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.Wild">
    <xs:attribute name="value" use="required"/>
  </xs:attributeGroup>
  <xs:element name="Isolated">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="Isolated"/>
          <xs:element ref="Selected"/>
          <xs:element ref="Connected"/>
          <xs:element ref="Recursed"/>
          <xs:element ref="Pointed"/>
          <xs:element ref="Variable"/>
          <xs:element ref="Applied"/>
          <xs:element ref="Empty"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="Isolated"/>
          <xs:element ref="Selected"/>
          <xs:element ref="Connected"/>
          <xs:element ref="Recursed"/>
          <xs:element ref="Pointed"/>
          <xs:element ref="Variable"/>
          <xs:element ref="Applied"/>
          <xs:element ref="Empty"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Selected">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Selection"/>
        <xs:element ref="ComprehensionExpr"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Connected">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="EdgeName"/>
          <xs:element ref="EdgeWildcard"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexSelection"/>
          <xs:element ref="VertexIntensionSelection"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexSelection"/>
          <xs:element ref="VertexIntensionSelection"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Recursed">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="UIdent">
          <xs:sequence>
            <xs:choice>
              <xs:element ref="FormalsFullForm"/>
              <xs:element ref="FormalsVertexForm"/>
            </xs:choice>
            <xs:choice>
              <xs:element ref="Isolated"/>
              <xs:element ref="Selected"/>
              <xs:element ref="Connected"/>
              <xs:element ref="Recursed"/>
              <xs:element ref="Pointed"/>
              <xs:element ref="Variable"/>
              <xs:element ref="Applied"/>
              <xs:element ref="Empty"/>
            </xs:choice>
            <xs:choice>
              <xs:element ref="ActualsFullForm"/>
              <xs:element ref="ActualsVertexForm"/>
            </xs:choice>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Pointed">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexQuotation"/>
        <xs:element ref="VertexIntegral"/>
        <xs:element ref="VertexString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Variable" type="UIdent"/>
  <xs:element name="Applied">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="UIdent">
          <xs:choice>
            <xs:element ref="ActualsFullForm"/>
            <xs:element ref="ActualsVertexForm"/>
          </xs:choice>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="Empty" abstract="true"/>
  <xs:element name="FormalsFullForm">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="vertices" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attributeGroup ref="attlist.LIdent"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="edges" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attributeGroup ref="attlist.LIdent"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="FormalsVertexForm">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="LIdent"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ActualsFullForm">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="VertexActualized"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="EdgeActualized"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ActualsVertexForm">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="VertexActualized"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Selection">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="BoundVertex"/>
          <xs:element ref="BoundEdge"/>
          <xs:element ref="BoundGraph"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="Isolated"/>
          <xs:element ref="Selected"/>
          <xs:element ref="Connected"/>
          <xs:element ref="Recursed"/>
          <xs:element ref="Pointed"/>
          <xs:element ref="Variable"/>
          <xs:element ref="Applied"/>
          <xs:element ref="Empty"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ComprehensionExpr" type="ComprehensionForm"/>
  <xs:element name="VertexSelection">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="LRBoundVertex"/>
        <xs:choice>
          <xs:element ref="Isolated"/>
          <xs:element ref="Selected"/>
          <xs:element ref="Connected"/>
          <xs:element ref="Recursed"/>
          <xs:element ref="Pointed"/>
          <xs:element ref="Variable"/>
          <xs:element ref="Applied"/>
          <xs:element ref="Empty"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexIntensionSelection" type="VertexComprehensionForm"/>
  <xs:complexType name="ComprehensionForm">
    <xs:sequence>
      <xs:element ref="ComprehensionForm"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ComprehensionForm">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="GenVertex"/>
          <xs:element ref="GenEdge"/>
          <xs:element ref="GenGraph"/>
        </xs:choice>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="ConditionIn"/>
          <xs:element ref="DeclIn"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="VertexComprehensionForm">
    <xs:sequence>
      <xs:element ref="VertexComprehensionForm"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="VertexComprehensionForm">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="LRGenVertex">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="ConditionIn"/>
            <xs:element ref="DeclIn"/>
          </xs:choice>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="EdgeComprehensionForm">
    <xs:sequence>
      <xs:element ref="EdgeComprehensionForm"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EdgeComprehensionForm">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="LRGenEdge">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="ConditionIn"/>
            <xs:element ref="DeclIn"/>
          </xs:choice>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="GraphComprehensionForm">
    <xs:sequence>
      <xs:element ref="GraphComprehensionForm"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GraphComprehensionForm">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="LRGenGraph">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="ConditionIn"/>
            <xs:element ref="DeclIn"/>
          </xs:choice>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="LRBoundVertex">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="VertexExprLabel"/>
        <xs:choice>
          <xs:element ref="VertexQuotation"/>
          <xs:element ref="VertexIntegral"/>
          <xs:element ref="VertexString"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="LRBoundEdge">
    <xs:sequence>
      <xs:element ref="LRBoundEdge"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LRBoundEdge">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="EdgePatternDecon">
          <xs:choice>
            <xs:element ref="EdgeExprNominal"/>
            <xs:element ref="EdgeExprStruct"/>
          </xs:choice>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="LRBoundGraph">
    <xs:sequence>
      <xs:element ref="LRBoundGraph"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LRBoundGraph">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="GraphIsolatedPattern"/>
          <xs:element ref="GraphPointedPattern"/>
          <xs:element ref="GraphConnectedPattern"/>
          <xs:element ref="GraphLiteral"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="Isolated"/>
          <xs:element ref="Selected"/>
          <xs:element ref="Connected"/>
          <xs:element ref="Recursed"/>
          <xs:element ref="Pointed"/>
          <xs:element ref="Variable"/>
          <xs:element ref="Applied"/>
          <xs:element ref="Empty"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="BoundVertex">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="LRBoundVertex"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="BoundEdge" type="LRBoundEdge"/>
  <xs:element name="BoundGraph" type="LRBoundGraph"/>
  <xs:complexType name="LRGenVertex">
    <xs:sequence>
      <xs:element ref="LRGenVertex"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LRGenVertex">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="VertexExprLabel"/>
        <xs:choice>
          <xs:element ref="VertexIntension"/>
          <xs:element ref="VertexExtenionExpr"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="LRGenEdge">
    <xs:sequence>
      <xs:element ref="LRGenEdge"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LRGenEdge">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="EdgePatternDecon">
          <xs:choice>
            <xs:element ref="EdgeIntension"/>
            <xs:element ref="EdgeExtenionExpr"/>
          </xs:choice>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="LRGenGraph">
    <xs:sequence>
      <xs:element ref="LRGenGraph"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LRGenGraph">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="GraphIsolatedPattern"/>
          <xs:element ref="GraphPointedPattern"/>
          <xs:element ref="GraphConnectedPattern"/>
          <xs:element ref="GraphLiteral"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="GraphIntension"/>
          <xs:element ref="GraphExtenionExpr"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GenVertex" type="LRGenVertex"/>
  <xs:element name="GenEdge" type="LRGenEdge"/>
  <xs:element name="GenGraph" type="LRGenGraph"/>
  <xs:element name="VertexSum">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="VertexSum"/>
          <xs:element ref="VertexMult"/>
          <xs:element ref="VertexLiteral"/>
          <xs:element ref="VertexVariable"/>
          <xs:element ref="VertexNegated"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexSum"/>
          <xs:element ref="VertexMult"/>
          <xs:element ref="VertexLiteral"/>
          <xs:element ref="VertexVariable"/>
          <xs:element ref="VertexNegated"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexMult">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="VertexSum"/>
          <xs:element ref="VertexMult"/>
          <xs:element ref="VertexLiteral"/>
          <xs:element ref="VertexVariable"/>
          <xs:element ref="VertexNegated"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexSum"/>
          <xs:element ref="VertexMult"/>
          <xs:element ref="VertexLiteral"/>
          <xs:element ref="VertexVariable"/>
          <xs:element ref="VertexNegated"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexLiteral">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexQuotation"/>
        <xs:element ref="VertexIntegral"/>
        <xs:element ref="VertexString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexVariable">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="LIdent"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexNegated">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexSum"/>
        <xs:element ref="VertexMult"/>
        <xs:element ref="VertexLiteral"/>
        <xs:element ref="VertexVariable"/>
        <xs:element ref="VertexNegated"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexExprLabel">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexSum"/>
        <xs:element ref="VertexMult"/>
        <xs:element ref="VertexLiteral"/>
        <xs:element ref="VertexVariable"/>
        <xs:element ref="VertexNegated"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexActualized">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexSum"/>
        <xs:element ref="VertexMult"/>
        <xs:element ref="VertexLiteral"/>
        <xs:element ref="VertexVariable"/>
        <xs:element ref="VertexNegated"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeExprNominal">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="EdgeQuotation"/>
        <xs:element ref="EdgeIntegral"/>
        <xs:element ref="EdgeString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeExprStruct">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="EdgeQuotation"/>
          <xs:element ref="EdgeIntegral"/>
          <xs:element ref="EdgeString"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexSum"/>
          <xs:element ref="VertexMult"/>
          <xs:element ref="VertexLiteral"/>
          <xs:element ref="VertexVariable"/>
          <xs:element ref="VertexNegated"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexSum"/>
          <xs:element ref="VertexMult"/>
          <xs:element ref="VertexLiteral"/>
          <xs:element ref="VertexVariable"/>
          <xs:element ref="VertexNegated"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeName">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="EdgeQuotation"/>
        <xs:element ref="EdgeIntegral"/>
        <xs:element ref="EdgeString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeWildcard" type="Wild"/>
  <xs:element name="EdgeLiteral">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="EdgeQuotation"/>
        <xs:element ref="EdgeIntegral"/>
        <xs:element ref="EdgeString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeVariable">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="LIdent"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeExprLabel">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="EdgeLiteral"/>
        <xs:element ref="EdgeVariable"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgePatternStruct" type="EdgePatternDecon"/>
  <xs:element name="EdgeActualized">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="EdgeLiteral"/>
        <xs:element ref="EdgeVariable"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="EdgePatternDecon">
    <xs:sequence>
      <xs:element ref="EdgePatternDecon"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EdgePatternDecon">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="EdgeLiteral"/>
          <xs:element ref="EdgeVariable"/>
        </xs:choice>
        <xs:element ref="VertexExprLabel"/>
        <xs:element ref="VertexExprLabel"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphIsolatedPattern">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="GraphIsolatedPattern"/>
          <xs:element ref="GraphPointedPattern"/>
          <xs:element ref="GraphConnectedPattern"/>
          <xs:element ref="GraphLiteral"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="GraphIsolatedPattern"/>
          <xs:element ref="GraphPointedPattern"/>
          <xs:element ref="GraphConnectedPattern"/>
          <xs:element ref="GraphLiteral"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphPointedPattern">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="VertexExprLabel"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphConnectedPattern">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="EdgeLiteral"/>
          <xs:element ref="EdgeVariable"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="GraphIsolatedPattern"/>
          <xs:element ref="GraphPointedPattern"/>
          <xs:element ref="GraphConnectedPattern"/>
          <xs:element ref="GraphLiteral"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="GraphIsolatedPattern"/>
          <xs:element ref="GraphPointedPattern"/>
          <xs:element ref="GraphConnectedPattern"/>
          <xs:element ref="GraphLiteral"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphLiteral">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="ConditionIn">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ConjunctionCondition"/>
        <xs:element ref="DisjunctionCondition"/>
        <xs:element ref="StructuralCondition"/>
        <xs:element ref="BaseCondition"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="DeclIn">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="GeneratorDecl"/>
        <xs:element ref="LocalDecl"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="GeneratorDecl">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="GenVertex"/>
        <xs:element ref="GenEdge"/>
        <xs:element ref="GenGraph"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="LocalDecl">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="BoundVertex"/>
        <xs:element ref="BoundEdge"/>
        <xs:element ref="BoundGraph"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexIntension" type="VertexComprehensionForm"/>
  <xs:element name="VertexExtenionExpr">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexExtensionForm"/>
        <xs:element ref="VertexExtensionBuiltinExpr"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeIntension" type="EdgeComprehensionForm"/>
  <xs:element name="EdgeExtenionExpr">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="EdgeExtensionForm"/>
        <xs:element ref="EdgeExtensionBuiltinExpr"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphIntension" type="GraphComprehensionForm"/>
  <xs:element name="GraphExtenionExpr">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="GraphExtensionForm"/>
        <xs:element ref="GraphExtensionBuiltinExpr"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexExtensionForm">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="VertexQuotation"/>
        <xs:element ref="VertexIntegral"/>
        <xs:element ref="VertexString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexExtensionBuiltinExpr">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexSet"/>
        <xs:element ref="SourceSet"/>
        <xs:element ref="SinkSet"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeExtensionForm">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="EdgeQuotation"/>
        <xs:element ref="EdgeIntegral"/>
        <xs:element ref="EdgeString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeExtensionBuiltinExpr" type="EdgeSet"/>
  <xs:element name="GraphExtensionForm">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphExtensionBuiltinExpr" type="GraphComponents"/>
  <xs:element name="VertexSet">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="SourceSet">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="SinkSet">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="EdgeSet">
    <xs:sequence>
      <xs:element ref="EdgeSet"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EdgeSet">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="GraphComponents">
    <xs:sequence>
      <xs:element ref="GraphComponents"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GraphComponents">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="ConjunctionCondition">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ConjunctionCondition"/>
          <xs:element ref="DisjunctionCondition"/>
          <xs:element ref="StructuralCondition"/>
          <xs:element ref="BaseCondition"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="ConjunctionCondition"/>
          <xs:element ref="DisjunctionCondition"/>
          <xs:element ref="StructuralCondition"/>
          <xs:element ref="BaseCondition"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DisjunctionCondition">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ConjunctionCondition"/>
          <xs:element ref="DisjunctionCondition"/>
          <xs:element ref="StructuralCondition"/>
          <xs:element ref="BaseCondition"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="ConjunctionCondition"/>
          <xs:element ref="DisjunctionCondition"/>
          <xs:element ref="StructuralCondition"/>
          <xs:element ref="BaseCondition"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StructuralCondition">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="GraphIsolatedCond"/>
        <xs:element ref="GraphPointedCond"/>
        <xs:element ref="GraphConnectedCond"/>
        <xs:element ref="GraphStructureLiteral"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="BaseCondition">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexBuiltinExpr"/>
        <xs:element ref="GraphBuiltinExpr"/>
        <xs:element ref="AtomicCondition"/>
        <xs:element ref="NegatedCondition"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphIsolatedCond">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="GraphIsolatedCond"/>
          <xs:element ref="GraphPointedCond"/>
          <xs:element ref="GraphConnectedCond"/>
          <xs:element ref="GraphStructureLiteral"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="GraphIsolatedCond"/>
          <xs:element ref="GraphPointedCond"/>
          <xs:element ref="GraphConnectedCond"/>
          <xs:element ref="GraphStructureLiteral"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphPointedCond">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexStructureSum"/>
        <xs:element ref="VertexStructureMult"/>
        <xs:element ref="VertexStructureLiteral"/>
        <xs:element ref="VertexStructureVariable"/>
        <xs:element ref="VertexStructureNegated"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphConnectedCond">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="EdgeLabelLiteralCondition"/>
          <xs:element ref="EdgeLabelAtomicCondition"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="GraphIsolatedCond"/>
          <xs:element ref="GraphPointedCond"/>
          <xs:element ref="GraphConnectedCond"/>
          <xs:element ref="GraphStructureLiteral"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="GraphIsolatedCond"/>
          <xs:element ref="GraphPointedCond"/>
          <xs:element ref="GraphConnectedCond"/>
          <xs:element ref="GraphStructureLiteral"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphStructureLiteral">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexStructureSum">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="VertexStructureSum"/>
          <xs:element ref="VertexStructureMult"/>
          <xs:element ref="VertexStructureLiteral"/>
          <xs:element ref="VertexStructureVariable"/>
          <xs:element ref="VertexStructureNegated"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexStructureSum"/>
          <xs:element ref="VertexStructureMult"/>
          <xs:element ref="VertexStructureLiteral"/>
          <xs:element ref="VertexStructureVariable"/>
          <xs:element ref="VertexStructureNegated"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexStructureMult">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="VertexStructureSum"/>
          <xs:element ref="VertexStructureMult"/>
          <xs:element ref="VertexStructureLiteral"/>
          <xs:element ref="VertexStructureVariable"/>
          <xs:element ref="VertexStructureNegated"/>
        </xs:choice>
        <xs:choice>
          <xs:element ref="VertexStructureSum"/>
          <xs:element ref="VertexStructureMult"/>
          <xs:element ref="VertexStructureLiteral"/>
          <xs:element ref="VertexStructureVariable"/>
          <xs:element ref="VertexStructureNegated"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexStructureLiteral">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexQuotation"/>
        <xs:element ref="VertexIntegral"/>
        <xs:element ref="VertexString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexStructureVariable">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Verity"/>
        <xs:element ref="Absurdity"/>
        <xs:element ref="Nullity"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexStructureNegated">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexStructureSum"/>
        <xs:element ref="VertexStructureMult"/>
        <xs:element ref="VertexStructureLiteral"/>
        <xs:element ref="VertexStructureVariable"/>
        <xs:element ref="VertexStructureNegated"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeLabelLiteralCondition">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="EdgeQuotation"/>
        <xs:element ref="EdgeIntegral"/>
        <xs:element ref="EdgeString"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeLabelAtomicCondition">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Verity"/>
        <xs:element ref="Absurdity"/>
        <xs:element ref="Nullity"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexBuiltinExpr">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="SinkBuiltin"/>
        <xs:element ref="SourceBuiltin"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="GraphBuiltinExpr" type="EmptyGraphBuiltin"/>
  <xs:element name="AtomicCondition">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Verity"/>
        <xs:element ref="Absurdity"/>
        <xs:element ref="Nullity"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="NegatedCondition">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexBuiltinExpr"/>
        <xs:element ref="GraphBuiltinExpr"/>
        <xs:element ref="AtomicCondition"/>
        <xs:element ref="NegatedCondition"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="SinkBuiltin">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexSum"/>
        <xs:element ref="VertexMult"/>
        <xs:element ref="VertexLiteral"/>
        <xs:element ref="VertexVariable"/>
        <xs:element ref="VertexNegated"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="SourceBuiltin">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="VertexSum"/>
        <xs:element ref="VertexMult"/>
        <xs:element ref="VertexLiteral"/>
        <xs:element ref="VertexVariable"/>
        <xs:element ref="VertexNegated"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="EmptyGraphBuiltin">
    <xs:sequence>
      <xs:element ref="EmptyGraphBuiltin"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="EmptyGraphBuiltin">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Verity" abstract="true"/>
  <xs:element name="Absurdity" abstract="true"/>
  <xs:element name="Nullity" abstract="true"/>
  <xs:element name="EdgeQuotation">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="EdgeIntegral" type="Integer"/>
  <xs:element name="EdgeString" type="String"/>
  <xs:element name="VertexQuotation">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="Isolated"/>
        <xs:element ref="Selected"/>
        <xs:element ref="Connected"/>
        <xs:element ref="Recursed"/>
        <xs:element ref="Pointed"/>
        <xs:element ref="Variable"/>
        <xs:element ref="Applied"/>
        <xs:element ref="Empty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="VertexIntegral" type="Integer"/>
  <xs:element name="VertexString" type="String"/>
</xs:schema>
<!-- ] -->
