// -*- Java -*- This Cup file was machine-generated by BNFC
package com.biosimilarity.lift.lib.json;

parser code {:
  public com.biosimilarity.lift.lib.json.Absyn.JSONObject pJSONObject() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (com.biosimilarity.lift.lib.json.Absyn.JSONObject) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal com.biosimilarity.lift.lib.json.Absyn.JSONObject JSONObject;
nonterminal com.biosimilarity.lift.lib.json.Absyn.JSONPair JSONPair;
nonterminal com.biosimilarity.lift.lib.json.Absyn.JSONArray JSONArray;
nonterminal com.biosimilarity.lift.lib.json.Absyn.JSONValue JSONValue;
nonterminal com.biosimilarity.lift.lib.json.Absyn.JSONNum JSONNum;
nonterminal com.biosimilarity.lift.lib.json.Absyn.JSONInt JSONInt;
nonterminal com.biosimilarity.lift.lib.json.Absyn.ListJSONPair ListJSONPair;
nonterminal com.biosimilarity.lift.lib.json.Absyn.ListJSONValue ListJSONValue;

terminal _SYMB_0;    //   {
terminal _SYMB_1;    //   }
terminal _SYMB_2;    //   :
terminal _SYMB_3;    //   [
terminal _SYMB_4;    //   ]
terminal _SYMB_5;    //   ,
terminal _SYMB_6;    //   false
terminal _SYMB_7;    //   null
terminal _SYMB_8;    //   true

terminal String _STRING_;

terminal Integer _INTEGER_;
terminal Double _DOUBLE_;




start with JSONObject;


JSONObject ::= _SYMB_0 ListJSONPair:p_2 _SYMB_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JObject(p_2); :} 
;
JSONPair ::= _STRING_:p_1 _SYMB_2 JSONValue:p_3  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JPair(p_1,p_3); :} 
;
JSONArray ::= _SYMB_3 ListJSONValue:p_2 _SYMB_4  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JArray(p_2); :} 
;
JSONValue ::= _STRING_:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JStr(p_1); :} 
  | JSONNum:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JNum(p_1); :}
  | JSONObject:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JObj(p_1); :}
  | JSONArray:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JArr(p_1); :}
  | _SYMB_8  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JTru(); :}
  | _SYMB_6  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JFal(); :}
  | _SYMB_7  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JNul(); :}
;
JSONNum ::= _DOUBLE_:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JDbl(p_1); :} 
;
JSONInt ::= _INTEGER_:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.JInt(p_1); :} 
;
ListJSONPair ::=  /* empty */  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.ListJSONPair(); :} 
  | JSONPair:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.ListJSONPair(); RESULT.addLast(p_1); :}
  | JSONPair:p_1 _SYMB_5 ListJSONPair:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListJSONValue ::=  /* empty */  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.ListJSONValue(); :} 
  | JSONValue:p_1  {: RESULT = new com.biosimilarity.lift.lib.json.Absyn.ListJSONValue(); RESULT.addLast(p_1); :}
  | JSONValue:p_1 _SYMB_5 ListJSONValue:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;

