// -*- Java -*- This Cup file was machine-generated by BNFC
package com.biosimilarity.seleKt.model.ill.lang.illtl;

parser code {:
  public com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLExpr pRLLExpr() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLExpr) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLExpr RLLExpr;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLExpr RLLExpr1;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLExpr RLLExpr2;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLExpr RLLExpr3;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLLeftPtrn RLLLeftPtrn;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLRightPtrn RLLRightPtrn;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.RLLPtrn RLLPtrn;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.FormalExpr FormalExpr;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.ValueExpr ValueExpr;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.ListRLLExpr ListRLLExpr1;
nonterminal com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.ListFormalExpr ListFormalExpr;

terminal _SYMB_0;    //   ;
terminal _SYMB_1;    //   (x)
terminal _SYMB_2;    //   <
terminal _SYMB_3;    //   ,
terminal _SYMB_4;    //   >
terminal _SYMB_5;    //   .
terminal _SYMB_6;    //   (
terminal _SYMB_7;    //   )
terminal _SYMB_8;    //   !
terminal _SYMB_9;    //   =>
terminal _SYMB_10;    //   @
terminal _SYMB_11;    //   _
terminal _SYMB_12;    //   *
terminal _SYMB_13;    //   be
terminal _SYMB_14;    //   case
terminal _SYMB_15;    //   in
terminal _SYMB_16;    //   inl
terminal _SYMB_17;    //   inr
terminal _SYMB_18;    //   lambda
terminal _SYMB_19;    //   let
terminal _SYMB_20;    //   of

terminal String _STRING_;

terminal Integer _INTEGER_;
terminal Double _DOUBLE_;
terminal String _IDENT_;

terminal String UIdent;


start with RLLExpr;


RLLExpr ::= RLLExpr:p_1 ListRLLExpr1:p_2 _SYMB_0  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Application(p_1,p_2); :} 
  | RLLExpr1:p_1  {: RESULT = p_1; :}
;
RLLExpr1 ::= RLLExpr1:p_1 _SYMB_1 RLLExpr2:p_3  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Separation(p_1,p_3); :} 
  | _SYMB_2 RLLExpr2:p_2 _SYMB_3 RLLExpr2:p_4 _SYMB_4  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Inclusion(p_2,p_4); :}
  | RLLExpr2:p_1  {: RESULT = p_1; :}
;
RLLExpr2 ::= _SYMB_18 ListFormalExpr:p_2 _SYMB_5 RLLExpr2:p_4  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Abstraction(p_2,p_4); :} 
  | _SYMB_16 _SYMB_6 RLLExpr2:p_3 _SYMB_7  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.InjectionLeft(p_3); :}
  | _SYMB_17 _SYMB_6 RLLExpr2:p_3 _SYMB_7  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.InjectionRight(p_3); :}
  | _SYMB_8 RLLExpr2:p_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Duration(p_2); :}
  | _SYMB_19 RLLExpr2:p_2 _SYMB_13 RLLPtrn:p_4 _SYMB_15 RLLExpr2:p_6  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Deconstruction(p_2,p_4,p_6); :}
  | _SYMB_14 RLLExpr2:p_2 _SYMB_20 RLLLeftPtrn:p_4 _SYMB_9 RLLExpr2:p_6 _SYMB_0 RLLRightPtrn:p_8 _SYMB_9 RLLExpr2:p_10  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Selection(p_2,p_4,p_6,p_8,p_10); :}
  | RLLExpr3:p_1  {: RESULT = p_1; :}
;
RLLExpr3 ::= FormalExpr:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Mention(p_1); :} 
  | ValueExpr:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Value(p_1); :}
  | _SYMB_6 RLLExpr:p_2 _SYMB_7  {: RESULT = p_2; :}
;
RLLLeftPtrn ::= _SYMB_16 _SYMB_6 FormalExpr:p_3 _SYMB_7  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.InLeft(p_3); :} 
;
RLLRightPtrn ::= _SYMB_17 _SYMB_6 FormalExpr:p_3 _SYMB_7  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.InRight(p_3); :} 
;
RLLPtrn ::= FormalExpr:p_1 _SYMB_1 FormalExpr:p_3  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.SeparationPtn(p_1,p_3); :} 
  | FormalExpr:p_1 _SYMB_10 FormalExpr:p_3  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.DuplicationPtn(p_1,p_3); :}
  | _SYMB_2 FormalExpr:p_2 _SYMB_3 _SYMB_11 _SYMB_4  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.InclusionLeft(p_2); :}
  | _SYMB_2 _SYMB_11 _SYMB_3 FormalExpr:p_4 _SYMB_4  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.InclusionRight(p_4); :}
  | _SYMB_8 FormalExpr:p_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Extraction(p_2); :}
  | _SYMB_11  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Wildcard(); :}
  | _SYMB_12  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.UnitPtn(); :}
;
FormalExpr ::= _SYMB_10 _SYMB_2 RLLExpr2:p_3 _SYMB_4  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.Transcription(p_3); :} 
  | _IDENT_:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.AtomLiteral(p_1); :}
;
ValueExpr ::= _DOUBLE_:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.DecimalLiteral(p_1); :} 
  | _INTEGER_:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.IntegerLiteral(p_1); :}
  | _STRING_:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.StringLiteral(p_1); :}
  | _SYMB_12  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.UnitLiteral(); :}
;
ListRLLExpr1 ::=  /* empty */  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.ListRLLExpr(); :} 
  | RLLExpr1:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.ListRLLExpr(); RESULT.addLast(p_1); :}
  | RLLExpr1:p_1 _SYMB_3 ListRLLExpr1:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListFormalExpr ::=  /* empty */  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.ListFormalExpr(); :} 
  | FormalExpr:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.lang.illtl.Absyn.ListFormalExpr(); RESULT.addLast(p_1); :}
  | FormalExpr:p_1 _SYMB_3 ListFormalExpr:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;

