// -*- Java -*- This Cup file was machine-generated by BNFC
package com.biosimilarity.seleKt.model.ill.vm.illvm;

parser code {:
  public com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.State pState() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.State) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.State State;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.Stack Stack;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.Dump Dump;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.EnvOrVal EnvOrVal;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.Frame Frame;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ILLCode ILLCode;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.Instruction Instruction;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.Value Value;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.Env Env;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListFrame ListFrame;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListInstruction ListInstruction;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListEnvOrVal ListEnvOrVal;
nonterminal com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListValue ListValue;

terminal _SYMB_0;    //   (
terminal _SYMB_1;    //   ;
terminal _SYMB_2;    //   )
terminal _SYMB_3;    //   [
terminal _SYMB_4;    //   ]
terminal _SYMB_5;    //   *
terminal _SYMB_6;    //   ,
terminal _SYMB_7;    //   CASE
terminal _SYMB_8;    //   ILLVM
terminal _SYMB_9;    //   MAKECCL
terminal _SYMB_10;    //   MAKEFCL
terminal _SYMB_11;    //   MAKEOCL
terminal _SYMB_12;    //   ccl
terminal _SYMB_13;    //   fcl
terminal _SYMB_14;    //   inl
terminal _SYMB_15;    //   inr
terminal _SYMB_16;    //   ocl







terminal String IllPUSHENV;
terminal String IllHD;
terminal String IllTL;
terminal String IllRET;
terminal String IllPUSH;
terminal String IllPOP;
terminal String IllAP;
terminal String IllUNIT;
terminal String IllUNUNIT;
terminal String IllPAIR;
terminal String IllUNPAIR;
terminal String IllFST;
terminal String IllSND;
terminal String IllINL;
terminal String IllINR;
terminal String IllREAD;
terminal String IllDUP;


start with State;


State ::= _SYMB_8 _SYMB_0 Stack:p_3 _SYMB_1 Env:p_5 _SYMB_1 ILLCode:p_7 _SYMB_1 Dump:p_9 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.MACHINE(p_3,p_5,p_7,p_9); :} 
;
Stack ::= ListEnvOrVal:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.MSTACK(p_1); :} 
;
Dump ::= ListFrame:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.MDUMP(p_1); :} 
;
EnvOrVal ::= Env:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.STACKENV(p_1); :} 
  | Value:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.STACKVAL(p_1); :}
;
Frame ::= _SYMB_3 Stack:p_2 _SYMB_1 Env:p_4 _SYMB_1 ILLCode:p_6 _SYMB_4  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.STACKFRAME(p_2,p_4,p_6); :} 
;
ILLCode ::= ListInstruction:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.CODESEQ(p_1); :} 
;
Instruction ::= IllPUSHENV:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.PUSHENV(p_1); :} 
  | IllHD:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.HEAD(p_1); :}
  | IllTL:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.TAIL(p_1); :}
  | IllRET:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.RET(p_1); :}
  | IllPUSH:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.PUSH(p_1); :}
  | IllPOP:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.POP(p_1); :}
  | _SYMB_10 _SYMB_0 ILLCode:p_3 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.MAKEFCL(p_3); :}
  | IllAP:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.AP(p_1); :}
  | IllUNIT:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.UNIT(p_1); :}
  | IllUNUNIT:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.UNUNIT(p_1); :}
  | IllPAIR:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.PAIR(p_1); :}
  | IllUNPAIR:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.UNPAIR(p_1); :}
  | _SYMB_9 _SYMB_0 ILLCode:p_3 _SYMB_1 ILLCode:p_5 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.MAKECCL(p_3,p_5); :}
  | IllFST:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.FST(p_1); :}
  | IllSND:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.SND(p_1); :}
  | IllINL:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.INL(p_1); :}
  | IllINR:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.INR(p_1); :}
  | _SYMB_7 _SYMB_0 ILLCode:p_3 _SYMB_1 ILLCode:p_5 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.CASE(p_3,p_5); :}
  | _SYMB_11 _SYMB_0 ILLCode:p_3 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.MAKEOCL(p_3); :}
  | IllREAD:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.READ(p_1); :}
  | IllDUP:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.DUP(p_1); :}
;
Value ::= _SYMB_5  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.UnitV(); :} 
  | _SYMB_0 Value:p_2 _SYMB_6 Value:p_4 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.PairV(p_2,p_4); :}
  | _SYMB_14 _SYMB_0 Value:p_3 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.InlV(p_3); :}
  | _SYMB_15 _SYMB_0 Value:p_3 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.InrV(p_3); :}
  | _SYMB_13 _SYMB_0 ILLCode:p_3 _SYMB_1 Env:p_5 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.FclV(p_3,p_5); :}
  | _SYMB_12 _SYMB_0 ILLCode:p_3 _SYMB_1 ILLCode:p_5 _SYMB_1 Env:p_7 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.CclV(p_3,p_5,p_7); :}
  | _SYMB_16 _SYMB_0 ILLCode:p_3 _SYMB_1 Env:p_5 _SYMB_2  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.OclV(p_3,p_5); :}
;
Env ::= ListValue:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ENVIRONMENT(p_1); :} 
;
ListFrame ::=  /* empty */  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListFrame(); :} 
  | Frame:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListFrame(); RESULT.addLast(p_1); :}
  | Frame:p_1 _SYMB_6 ListFrame:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListInstruction ::=  /* empty */  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListInstruction(); :} 
  | Instruction:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListInstruction(); RESULT.addLast(p_1); :}
  | Instruction:p_1 _SYMB_6 ListInstruction:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListEnvOrVal ::=  /* empty */  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListEnvOrVal(); :} 
  | EnvOrVal:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListEnvOrVal(); RESULT.addLast(p_1); :}
  | EnvOrVal:p_1 _SYMB_6 ListEnvOrVal:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListValue ::=  /* empty */  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListValue(); :} 
  | Value:p_1  {: RESULT = new com.biosimilarity.seleKt.model.ill.vm.illvm.Absyn.ListValue(); RESULT.addLast(p_1); :}
  | Value:p_1 _SYMB_6 ListValue:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;

